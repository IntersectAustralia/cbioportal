---

- include: ./system_dependencies.yml

- name: Ensure correct permissions on devel's home directory
  file: >
    path=/home/devel
    owner=devel
    group=devel
    mode=0755

- name: Pull source code from git
  git: >
    repo=https://github.com/IntersectAustralia/cbioportal.git
    dest={{ cbioportal_root }}
    version={{ cbioportal_git_tag }}
    force=yes

- name: Setup httpd config
  template: >
    src=httpd.conf.j2
    dest=/etc/httpd/conf.d/cbioportal.conf
  notify: restart apache
  become: yes

- name: Setup httpd logrotate
  template: >
    src=logrotate.httpd.j2
    dest=/etc/logrotate.d/httpd.logrotate
  sudo: yes

- name: Copy the example global confirguration properties file
  copy: >
    src={{ cbioportal_root }}/src/main/resources/portal.properties.EXAMPLE
    dest={{ cbioportal_root }}/src/main/resources/portal.properties
    remote_src=True
    force=no

- name: Prepare the portal properties file
  lineinfile: >
    dest={{ cbioportal_root }}/src/main/resources/portal.properties
    regexp='^db.password=somepassword$'
    line='db.password={{ cbioportal_database.password }}'

# ToDo: reexamine once https://github.com/cBioPortal/cbioportal/issues/1507 is resolved
- name: Set the portal properties to show the patient view drubs tab
  lineinfile: >
    dest={{ cbioportal_root }}/src/main/resources/portal.properties
    regexp='^skin.patient_view.show_clinical_trials_tab=false$'
    line='skin.patient_view.show_clinical_trials_tab=true'

# ToDo: reexamine once https://github.com/cBioPortal/cbioportal/issues/1507 is resolved
- name: Set the portal properties to show the patient view clinical trials tab
  lineinfile: >
    dest={{ cbioportal_root }}/src/main/resources/portal.properties
    regexp='^skin.patient_view.show_drugs_tab=false$'
    line='skin.patient_view.show_drugs_tab=true'

- name: Copy the example logging properties file
  copy: >
    src={{ cbioportal_root }}/src/main/resources/log4j.properties.EXAMPLE
    dest={{ cbioportal_root }}/src/main/resources/log4j.properties
    remote_src=True
    force=no

- name: Prepare the log4j.properties File
  lineinfile: >
    dest={{ cbioportal_root }}/src/main/resources/log4j.properties
    regexp='^log4j.appender.a.rollingPolicy.FileNamePattern ='
    line='log4j.appender.a.rollingPolicy.FileNamePattern ={{ catalina_home }}/logs/public-portal.log.%d.gz'

- name: Prepare the log4j.properties File
  lineinfile: >
    dest={{ cbioportal_root }}/src/main/resources/log4j.properties
    regexp='^log4j.appender.a.File ='
    line='log4j.appender.a.File ={{ catalina_home }}/logs/public-portal.log'

- name: Ensures Maven Settings dir exists
  file: path=/home/devel/.m2/ state=directory

- name: Create a Maven Settings File
  template: >
    src=settings.xml.j2
    dest=/home/devel/.m2/settings.xml

- name: Set the PORTAL_HOME environment variable
  lineinfile: >
    dest=/home/devel/.bash_profile
    regexp='^export PORTAL_HOME='
    line='export PORTAL_HOME={{ cbioportal_root }}'

- name: Compile the cBioPortal source code with Maven
  shell: . /home/devel/.bash_profile && mvn -DskipTests clean install
  args:
    chdir: "{{ cbioportal_root }}"

- name: Download the cBioPortal seed database
  get_url: >
    url=https://storage.googleapis.com/cbiostorage-1/cbioportal-seed.sql.gz
    dest=/home/devel
    timeout=1000
  tags:
    - clean

- name: Unpackage the cBioPortal seed database
  command: gunzip cbioportal-seed.sql.gz
  tags:
    - clean

- name: Import the cBioPortal seed database
  shell: . /home/devel/.bash_profile && mysql --user="{{ cbioportal_database.username }}" --password="{{ cbioportal_database.password }}" cbioportal  < cbioportal-seed.sql
  tags:
    - clean

- name: Remove the unpackaged cBioPortal seed database once imported
  file: >
     path=/home/devel/cbioportal-seed.sql
     state=absent

- name: Validate the sample study
  command: ./validateData.py -s ../../../test/scripts/test_data/study_es_0/ -n
  args:
    chdir: "{{ cbioportal_root }}/core/src/main/scripts/importer"
  register: sample_validation_result
  when: load_sample_study | bool

- name: Confirm the sample study validation succeeeded
  assert:
    that: sample_validation_result.stderr.find('Validation of study succeeded with warnings.') != -1
  when: load_sample_study | bool

# Manually pass the PORTAL_HOME environment var since it isn't preserved when running as sudo
- name: Import the sample study
  shell: . /home/devel/.bash_profile && env PORTAL_HOME="{{cbioportal_root}}" ./metaImport.py -s ../../../test/scripts/test_data/study_es_0/ -n -o
  args:
    chdir: "{{ cbioportal_root }}/core/src/main/scripts/importer"
  register: sample_import_result
  become: yes
  when: load_sample_study | bool

- name: Confirm the sample study import succeeeded
  assert:
    that: sample_import_result.stdout_lines[-2] == "Done."
  when: load_sample_study | bool

- name: Set the CATALINA_HOME environment variable
  lineinfile: >
    dest=/home/devel/.bash_profile
    regexp='^export CATALINA_HOME='
    line='export CATALINA_HOME={{ catalina_home }}'

- name: Add the PORTAL_HOME environment variable to Apache Tomcat
  lineinfile: >
    dest=/usr/libexec/tomcat/preamble
    regexp='^PORTAL_HOME='
    line='PORTAL_HOME={{ catalina_home }}/webapps/cbioportal/WEB-INF/classes/'
  become: yes

- name: Ensures MySQL JDBC Driver dir exists
  file: path={{ mysq_connector_root }} state=directory

- name: Check if the MySQL JDBC Driver has been added to Apache Tomcat
  stat: path={{ mysq_connector_root }}/mysql-connector-java-5.1.39/mysql-connector-java-5.1.39-bin.jar
  register: mysql_jdbc

- name: Download and extract the MySQL JDBC Driver
  unarchive: >
    src=http://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.39.zip
    dest={{ mysq_connector_root }}
    copy=no
  when: mysql_jdbc.stat.exists == False

- name: Add the MySQL JDBC Driver to Apache Tomcat
  copy: >
    src={{ mysq_connector_root }}/mysql-connector-java-5.1.39/mysql-connector-java-5.1.39-bin.jar
    dest={{ catalina_home }}/lib
    remote_src=True
  become: yes

# Revert to not using Tomcat's DBCP class to avoid errors with tomcat being unable to create resource factory instance, see http://stackoverflow.com/questions/21240052/classnotfoundexception-after-adding-the-jar-to-the-lib-folder-of-a-tomcat-service
# Also configure to avoid MySQL broken pip after long periods of inactivity, see https://github.com/cbioportal/cbioportal/blob/master/docs/Deploying.md#gotcha--broken-mysql-pipe-after-long-periods-of-inactivity
- name: Configure the Database Connection Pool Resource to Apache Tomcat
  lineinfile: >
    dest={{ catalina_home }}/conf/context.xml
    insertbefore='^</Context>$'
    line='<Resource name="jdbc/cbioportal" auth="Container" type="javax.sql.DataSource" maxActive="100" maxIdle="30" maxWait="10000" username="{{ cbioportal_database.username }}" password="{{ cbioportal_database.password }}" driverClassName="com.mysql.jdbc.Driver" connectionProperties="zeroDateTimeBehavior=convertToNull;" factory="org.apache.commons.dbcp.BasicDataSourceFactory" url="jdbc:mysql://localhost:3306/cbioportal" testOnBorrow="true" validationQuery="SELECT 1"/>'
  become: yes

- name: Ensure Apache Tomcat 7 is running.
  service:
    name: tomcat
    state: started
    enabled: yes
  become: yes

- name: Deploy the cBioPortal WAR file
  copy: >
    src={{ cbioportal_root }}/portal/target/cbioportal.war
    dest={{ catalina_home }}/webapps
    remote_src=True
  become: yes

- name: Redirect the Tomcat home page to cBioPortal
  lineinfile: >
    dest={{ catalina_home }}/webapps/ROOT/index.jsp
    insertbefore=BOF
    line="<% response.sendRedirect("/cbioportal"); %>"
  become: yes

- name: Restart Apache
  service:
    name: httpd
    state: restarted
  become: yes

- name: Restart Tomcat
  service:
    name: tomcat
    state: restarted
  become: yes

- name: Wait for 10 minutes so that Tomcat can finish initialising cBioPortal
  pause: minutes=10
